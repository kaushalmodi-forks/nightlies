language: c

cache:
  directories:
    - nim

matrix:
  include:
    - os: linux
      env:
        - NIMBRANCH=devel
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

    - os: osx
      env:
        - NIMBRANCH=devel
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

    - os: windows
      env:
        - NIMBRANCH=devel
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

    - os: linux
      env:
        - NIMBRANCH=version-0-19
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

    - os: osx
      env:
        - NIMBRANCH=version-0-19
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

    - os: windows
      env:
        - NIMBRANCH=version-0-19
        - NIMVER="$(git ls-remote ${NIMREPO} ${NIMBRANCH} | cut -f 1)"
        - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

env:
  global:
    - NIMREPO="https://github.com/nim-lang/Nim"

# branches:
#   only:
#     # Prevent building the auto tagged "untagged-*" commits.
#     # https://docs.travis-ci.com/user/customizing-the-build/#safelisting-or-blocklisting-branches
#     - master

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libsdl1.2-dev
      - libgc-dev
      - libsfml-dev

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      brew update
      brew install boehmgc
      brew install sfml
      brew install gnu-tar
    fi
  - set -e
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      unset -f cd
      shell_session_update() { :; }
    fi

install:
  - echo "NIMDIR = ${NIMDIR}"
  - |
    if [[ ! -f "${NIMDIR}/bin/nim" ]]
    then
      export DO_DEPLOY=yes && echo "DO_DEPLOY = ${DO_DEPLOY}"
      rm -rf nim
      mkdir -p nim
      git clone --single-branch --branch "${NIMBRANCH}" --depth=1 "${NIMREPO}" "${NIMDIR}"
      cd "${NIMDIR}" || exit
      [ -d csources ] || git clone --depth 1 https://github.com/nim-lang/csources.git
      cd csources || exit
      echo "[phase 0] Building csources"
      if [[ "$TRAVIS_OS_NAME" == "windows" ]]
      then
        cmd "/C build64.bat"
      else
        sh build.sh
      fi
      cd ..
      echo "[phase 1] Building koch"
      ./bin/nim c koch
      echo "[phase 2] Building nim"
      ./koch boot -d:release
      export PATH="${NIMDIR}/bin:${PATH}"
      echo "[phase 3] Running koch doc0"
      ./koch doc0
      echo "[phase 4] Running koch csource"
      ./koch csource -d:release
      if [[ "$TRAVIS_OS_NAME" == "windows" ]]
      then
        echo "[phase 5] Running tools/winrelease"
        ./bin/nim c tools/winrelease
        ./tools/winrelease
      else
        echo "[phase 5] Running koch xz"
        ./koch xz -d:release
      fi
      # After building nim, wipe csources to save on cache space.
      rm -rf csources
    fi
  # Ensure that NIMVERSHORT and PATH env vars are set whether or not
  # cached nim build is used.
  - cd "${NIMDIR}" && export NIMVERSHORT="$(git log --format=%h -1)"
  - export PATH="${NIMDIR}/bin:${PATH}"
  - |
    if [[ ! -z "${DO_DEPLOY+x}" ]]
    then
      echo "[cache check] New Nim commit found"
    else
      echo "[cache check] No new Nim commit"
    fi

script:
  - echo "[In script block]"
  - nim --version

before_deploy:
  - cd "${TRAVIS_BUILD_DIR}"
  - export DEPLOY_VERSION="$(nim --version | head -n 1 | perl -pe 's/.*Version ([0-9.]+).*/\1/')"
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]
    then
      export ZIPSUFFIX="_x64.zip"
    else
      export ZIPSUFFIX=".tar.xz"
    fi

  - export ASSETFILE="nim-${DEPLOY_VERSION}-${TRAVIS_OS_NAME}${ZIPSUFFIX}"
  - cp -f "${NIMDIR}/build/nim-${DEPLOY_VERSION}${ZIPSUFFIX}" "${ASSETFILE}"
  - echo "[phase n-1] The deploy will start now .."

deploy:
  provider: releases
  api_key: "${GITHUB_OAUTH_TOKEN}"
  file: "${ASSETFILE}"
  name: "Nightly build $(date +'%Y-%m-%d') ${NIMVERSHORT}"
  body: >-
    This nightly release is built using https://github.com/nim-lang/Nim/tree/${NIMVER}.
    The *-linux.tar.xz release archive is built on linux, and likewise for the *-osx.tar.xz archive.
    But either file can be used to build Nim on Linux, OSX and even Windows.

  skip_cleanup: true
  on:
    condition: "! -z ${DO_DEPLOY+x}"
    tags: false

notifications:
  email:
    on_success: never # default: change
    on_failure: never # default: always
    # on_failure: always # default: always
