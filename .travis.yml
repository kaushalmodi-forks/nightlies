sudo: false

language: c

# os:
#   - linux
#   - osx
# dist: trusty

# matrix:
#   allow_failures:
#     - os: linux

cache:
  directories:
    - nim

env:
  global:
    - NIMREPO="https://github.com/nim-lang/Nim"
    - NIMVER="$(git ls-remote ${NIMREPO} devel | cut -f 1)"
    - NIMDIR="${TRAVIS_BUILD_DIR}/nim/${NIMVER}"

addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libsdl1.2-dev
    - libgc-dev
    - libsfml-dev

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boehmgc; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install sfml; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gnu-tar; fi
  - set -e
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then unset -f cd; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then shell_session_update() { :; }; fi

install:
  - echo "NIMDIR = ${NIMDIR}"
  # After building nim, wipe csources to save on cache space.
  - "{ [ -f ${NIMDIR}/bin/nim ]; } ||
      ( rm -rf nim;
        mkdir -p nim;
        git clone --single-branch --branch devel --depth=1 ${NIMREPO} ${NIMDIR};
        cd ${NIMDIR};
        [ -d csources ] || git clone --depth 1 https://github.com/nim-lang/csources.git;
        cd csources;
        echo 'herehere0';
        sh build.sh;
        cd ..;
        echo 'herehere1';
        ./bin/nim c koch;
        echo 'herehere2';
        ./koch boot -d:release;
        export PATH=\"${NIMDIR}/bin:${PATH}\";
        echo 'herehere3';
        ./koch doc0;
        echo 'herehere4';
        ./koch csource -d:release;
        rm -rf csources;
      )"
  - echo 'herehere5'
  - export PATH="${NIMDIR}/bin:${PATH}"

script:
  - echo 'herehere6'
  - nim --version

before_deploy:
  - echo 'herehere7'
  - cd "${NIMDIR}"
  # Create the release archive.
  - ./koch xz -d:release
deploy:
  provider: releases
  api_key: "${GITHUB_OAUTH_TOKEN}"
  file: "nim/${NIMVER}/build/nim-*.tar.xz"
  file_glob: true
  skip_cleanup: true
  on:
    tags: false
